---
# Source: elasticsearch/templates/coordinating-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: kefu-elasticsearch-coordinating-only
  labels:
    app: elasticsearch
    release: kefu
    role: coordinating-only
  annotations: 
    {}
spec:
  type: "ClusterIP"
  ports:
    - name: http
      port: 9200
      targetPort: http
      nodePort: null
  selector:
    app: elasticsearch
    release: kefu
    role: coordinating-only
---
# Source: elasticsearch/templates/discovery-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: kefu-elasticsearch-discovery
  labels:
    app: elasticsearch
    release: kefu
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 9300
      name: transport
      targetPort: transport
  publishNotReadyAddresses: true
  sessionAffinity: None
  selector:
    app: elasticsearch
    release: kefu
---
# Source: elasticsearch/templates/ingest-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: kefu-elasticsearch-ingest
  labels:
    app: elasticsearch
    release: kefu
    role: ingest
  annotations: 
    {}
spec:
  type: "ClusterIP"
  ports:
    - name: transport
      port: 9300
      targetPort: transport
      nodePort: null
  selector:
    app: elasticsearch
    release: kefu
    role: ingest
---
# Source: elasticsearch/templates/master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: kefu-elasticsearch-master
  labels:
    app: elasticsearch
    release: kefu
    role: master
  annotations: 
    {}
spec:
  type: "ClusterIP"
  ports:
    - name: transport
      port: 9300
      targetPort: transport
      nodePort: null
  selector:
    app: elasticsearch
    release: kefu
    role: master
---
# Source: elasticsearch/templates/metrics-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: kefu-elasticsearch-metrics
  labels:
    app: elasticsearch
    release: kefu
    role: metrics
  annotations: 
    prometheus.io/port: "9114"
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9114
      targetPort: metrics
  selector:
    app: elasticsearch
    release: kefu
    role: metrics
---
# Source: elasticsearch/templates/coordinating-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kefu-elasticsearch-coordinating-only
  labels:
    app: elasticsearch
    release: kefu
    role: coordinating-only
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: elasticsearch
      release: kefu
      role: coordinating-only
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
        release: kefu
        role: coordinating-only
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
      containers:
        - name: elasticsearch
          image: docker.io/bitnami/elasticsearch:7.6.1-debian-10-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: "elastic"
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: kefu-elasticsearch-discovery
            - name: ELASTICSEARCH_HEAP_SIZE
              value: "128m"
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: ELASTICSEARCH_NODE_TYPE
              value: "coordinating"
          ports:
            - name: http
              containerPort: 9200
            - name: transport
              containerPort: 9300
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /_cluster/health?local=true
              port: http
          readinessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /_cluster/health?local=true
              port: http
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: "/bitnami/elasticsearch/data/"
      volumes:
        - name: data
          emptyDir: {}
---
# Source: elasticsearch/templates/ingest-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kefu-elasticsearch-ingest
  labels:
    app: elasticsearch
    release: kefu
    role: ingest
spec:
  selector:
    matchLabels:
      app: elasticsearch
      release: kefu
      role: ingest
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
        release: kefu
        role: ingest
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: elasticsearch
          image: docker.io/bitnami/elasticsearch:7.6.1-debian-10-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: "elastic"
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: kefu-elasticsearch-discovery
            - name: ELASTICSEARCH_HEAP_SIZE
              value: "128m"
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: ELASTICSEARCH_NODE_TYPE
              value: "ingest"
          ports:
            - name: transport
              containerPort: 9300
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 90
          readinessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 5
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
          volumeMounts:
            - name: "data"
              mountPath: "/bitnami/elasticsearch/data/"
      volumes:
        - name: data
          emptyDir: {}
---
# Source: elasticsearch/templates/metrics-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kefu-elasticsearch-metrics
  labels:
    app: elasticsearch
    release: kefu
    role: metrics
spec:
  selector:
    matchLabels:
      app: elasticsearch
      release: kefu
      role: metrics
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
        release: kefu
        role: metrics
      annotations: 
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:      
      containers:
        - name: metrics
          image: docker.io/bitnami/elasticsearch-exporter:1.1.0-debian-10-r43
          imagePullPolicy: "IfNotPresent"
          args:
            - --es.uri=http://kefu-elasticsearch-coordinating-only:9200
            - --es.all
          ports:
            - name: metrics
              containerPort: 9114
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            timeoutSeconds: 1
---
# Source: elasticsearch/templates/data-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kefu-elasticsearch-data
  labels:
    app: elasticsearch
    release: kefu
    role: data
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: elasticsearch
      release: kefu
      role: data
  serviceName: kefu-elasticsearch-data
  replicas: 3
  template:
    metadata:
      labels:
        app: elasticsearch
        release: kefu
        role: data
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
      containers:
        - name: elasticsearch
          image: docker.io/bitnami/elasticsearch:7.6.1-debian-10-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: "elastic"
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: kefu-elasticsearch-discovery
            - name: ELASTICSEARCH_HEAP_SIZE
              value: "128m"
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: ELASTICSEARCH_NODE_TYPE
              value: "data"
          ports:
            - name: transport
              containerPort: 9300
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
          readinessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 1152Mi
          volumeMounts:
            - name: "data"
              mountPath: "/bitnami/elasticsearch/data"
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "8Gi"
---
# Source: elasticsearch/templates/master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kefu-elasticsearch-master
  labels:
    app: elasticsearch
    release: kefu
    role: master
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: elasticsearch
      release: kefu
      role: master
  serviceName: kefu-elasticsearch-master
  podManagementPolicy: Parallel
  replicas: 3
  template:
    metadata:
      labels:
        app: elasticsearch
        release: kefu
        role: master
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
      containers:
        - name: elasticsearch
          image: docker.io/bitnami/elasticsearch:7.6.1-debian-10-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: "elastic"
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: kefu-elasticsearch-discovery
            - name: ELASTICSEARCH_CLUSTER_MASTER_HOSTS
              value: kefu-elasticsearch-master-0 kefu-elasticsearch-master-1 kefu-elasticsearch-master-2 
            - name: ELASTICSEARCH_MINIMUM_MASTER_NODES
              value: "2"
            - name: ELASTICSEARCH_HEAP_SIZE
              value: "128m"
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: ELASTICSEARCH_NODE_TYPE
              value: "master"
          ports:
            - name: transport
              containerPort: 9300
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
          readinessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/elasticsearch/data
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "8Gi"
---
# Source: elasticsearch/templates/serviceaccount.yaml
---
